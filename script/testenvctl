#!/usr/bin/python

import subprocess
import argparse
import os
import sys

DOCKER, RUN = ('docker', 'run')
IMAGE_NAME = 'colajam93/archlinux'


def run_with_exit_code(command):
    completed = subprocess.run(command)
    sys.exit(completed.returncode)


def do_start(args):
    options = ['-it']
    read_only = ':ro' if not args.mount_writable else ''
    if args.remove:
        options.extend(['--rm'])
    if args.mount_home:
        options.extend(['-v', '{}:/mnt{}'.format(os.environ['HOME'], read_only)])
    if args.with_gui:
        options.extend(['-v', '/tmp/.X11-unix:/tmp/.X11-unix', '-e',
                        'DISPLAY={}'.format(os.environ['DISPLAY'])])
    if args.volume:
        options.extend(['-v', '{}{}'.format(args.volume, read_only)])
    if args.port:
        options.extend(['-p', args.port])
    if args.name:
        options.extend(['--name', args.name])
    image = args.image if args.image else IMAGE_NAME

    command = [DOCKER, RUN] + options + [image, '/bin/bash']
    run_with_exit_code(command)


def main():
    def setup_start_parser(parser):
        parser_start = parser.add_parser(RUN)
        parser_start.add_argument('-r', '--remove', action='store_true')
        parser_start.add_argument('-m', '--mount-home', action='store_true')
        parser_start.add_argument('-w', '--mount-writable', action='store_true')
        parser_start.add_argument('-g', '--with-gui', action='store_true')
        parser_start.add_argument('-i', '--image')
        parser_start.add_argument('-p', '--port')
        parser_start.add_argument('-n', '--name')
        parser_start.add_argument('-v', '--volume')
        parser_start.set_defaults(func=do_start, parser=parser_start)

    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest='command')
    subparsers.required = True
    setup_start_parser(subparsers)
    args = parser.parse_args()
    args.func(args)


if __name__ == '__main__':
    main()
