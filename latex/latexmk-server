#!/usr/bin/env bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

latexmk_server_dir="$HOME/.local/share/latexmk-server"
TRUE="true"
FALSE="false"

gnu_readlink_f() {
    pushd $(pwd -P) &> /dev/null
    local TARGET_FILE=$1
    while [[ "$TARGET_FILE" != "" ]]; do
        cd $(dirname $TARGET_FILE)
        local FILENAME=$(basename $TARGET_FILE)
        TARGET_FILE=$(readlink $FILENAME)
    done

    echo "$(pwd -P)/$FILENAME"
    popd &> /dev/null
}

ls_absolute_path() {
    if [[ $# -ne 1 ]]; then
        return 1
    fi
    local i
    for i in $(find $1 -maxdepth 1 -type f); do
        echo $(gnu_readlink_f $i)
    done
}

print_usage() {
    echo "latexmk-server [-c] [-k] [-l] TEX_FILENAME"
}

is_running() {
    # require one argument: pid
    local pid=$1
    # check process has pid is latexmk
    [[ "$(ps -p "$pid" -o args 2> /dev/null | sed -n 2p)" == *"latexmk"* ]]
    return $?
}


# main

kill=$FALSE
cleanup=$FALSE
list=$FALSE
for OPT in "$@"
do
    case "$OPT" in
        '-c'|'--cleanup' )
            cleanup=$TRUE
            shift 1
            ;;
        '-k'|'--kill' )
            kill=$TRUE
            shift 1
            ;;
        '-l'|'--list' )
            list=$TRUE
            shift 1
            ;;
        '--'|'-' )
            shift 1
            param+=( "$@" )
            break
            ;;
        -*)
            echo "latexmk-server: illegal option -- '$(echo $1 | sed 's/^-*//')'" 1>&2
            exit 1
            ;;
        *)
            if [[ ! -z "$1" ]] && [[ ! "$1" =~ ^-+ ]]; then
                param+=( "$1" )
                shift 1
            fi
            ;;
    esac
done

if [[ $cleanup == $TRUE ]]; then
    for i in $(ls_absolute_path $latexmk_server_dir); do
        _pid=$(basename $i)
        _pid_file=$i
        if is_running $_pid; then
            kill $_pid
        fi
        rm -f $_pid_file
    done
    exit 0
elif [[ $list == $TRUE ]]; then
    for i in $(ls_absolute_path $latexmk_server_dir); do
        _pid=$(basename $i)
        _pid_file=$i
        p=$(<"$i")
        if is_running $_pid; then
            echo "pid: $_pid"
            echo "target: $p"
        else
            echo "cleanup pid: $_pid"
            rm -f $_pid_file
        fi
    done
    exit 0
fi

if [[ ${#param[@]} -lt 1 ]] || ! [[ -f ${param[0]} ]] || ! [[ ${param[0]} == *".tex" ]] ; then
    print_usage
    exit 1
fi

target=$(gnu_readlink_f ${param[0]})

if ! [[ -e $latexmk_server_dir ]]; then
    mkdir $latexmk_server_dir
fi

pid_exits=$FALSE
running=$FALSE
for i in $(ls_absolute_path $latexmk_server_dir); do
    _pid=$(basename $i)
    _pid_file=$i
    if is_running $_pid; then
        _running=$TRUE
    else
        _running=$FALSE
    fi
    p=$(<"$i")
    if [[ $p == $target ]]; then
        pid_exits=$TRUE
        pid=$_pid
        pid_file=$_pid_file
        running=$_running
    fi
    if [[ $_running == $FALSE ]]; then
         echo "cleanup pid: $_pid"
         rm -f $_pid_file
    fi
done

if [[ $running == $TRUE && $kill == $TRUE ]]; then
    kill $pid
    rm -f $pid_file
    echo "latexmk was killed"
    echo "target: $target"
elif [[ $running == $TRUE && $kill == $FALSE ]]; then
    echo "latexmk is running"
    echo "pid: $pid"
    echo "target: $target"
    exit 1
elif [[ $running == $FALSE && $kill == $TRUE ]]; then
    echo "latexmk is not running"
    echo "target: $target"
    exit 1
else
    cd $(dirname $target)
    latexmk -pvc $target &> /dev/null &
    pid=$!
    pid_file="$latexmk_server_dir/$pid"
    echo $target > $pid_file
    sleep 1
    echo "latexmk started. sanity check..."
    if ! is_running $pid; then
        rm -f $pid_file
        echo "start-up latexmk failed"
        exit 1
    else
        echo "pid: $pid"
    fi
fi
